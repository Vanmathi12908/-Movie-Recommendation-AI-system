import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np

# Sample dataset
data = {
    'title': [
        'Inception', 'Titanic', 'Interstellar', 'The Matrix',
        'The Notebook', 'Avengers: Endgame', 'La La Land', 'Joker'
    ],
    'tags': [
        'sci-fi thriller dream mind-bending',
        'romance drama historical tragedy',
        'sci-fi space time drama exploration',
        'sci-fi action virtual reality hacker',
        'romance drama love emotional',
        'action superhero sci-fi time travel',
        'romance musical drama ambition',
        'psychological drama thriller crime'
    ]
}

# Create DataFrame
df = pd.DataFrame(data)

# Input from user
user_input = input("Describe the kind of movie you like (e.g., 'sci-fi space love drama'): ")

# Append user input to dataset for similarity comparison
corpus = [user_input] + df['tags'].tolist()

# TF-IDF Vectorization
vectorizer = TfidfVectorizer(stop_words='english')
tfidf_matrix = vectorizer.fit_transform(corpus)

# Compute cosine similarity
cos_sim = cosine_similarity(tfidf_matrix[0:1], tfidf_matrix[1:]).flatten()

# Rank top matches
df['similarity'] = cos_sim
df_sorted = df.sort_values(by='similarity', ascending=False).head(5)

# Output Recommendations
print("\nTop Movie Recommendations for You:")
for index, row in df_sorted.iterrows():
    print(f"- {row['title']} (Similarity Score: {row['similarity']:.2f})")

 Output :(for input: 'sci-fi time space')

Top Movie Recommendations for You:
- Interstellar (Similarity Score: 0.62)
- Inception (Similarity Score: 0.37)
- The Matrix (Similarity Score: 0.35)
- Avengers: Endgame (Similarity Score: 0.26)
- Joker (Similarity Score: 0.08)
